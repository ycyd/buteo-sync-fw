<?xml version="1.0" encoding="UTF-8"?>

<profile name="$profile.name" type="sync" >
<!--
Definitions for the client plugin profile. All the client plugin definitions are
in the form of key/value pairs. These key/value pairs are used by the buteo
sync framework. You can also add your own key/value pairs that you can use
in the plugin. The key/value pairs are accessible  via the 'iProfile' object,
like:
    QMap<QString, QString> properties = iProfile->allNonStorageKeys ();

Depending on your needs, change the following default settings
-->
#if $getVar('$profile.remote_url', '') != ''
    <key name="Remote database" value="$profile.remote_url" />
#end if
#if $getVar('$profile.username','') != ''
    <key name="Username" value="$profile.username" />
#end if
#if $getVar('$profile.password','') != ''
    <key name="Password" value="$profile.password" />
#end if
    <key name="destinationtype" value="online"/>
    <key name="displayname" value="$profile.displayname"/>
    <key name="enabled" value="$profile.enabled" />
#if $getVar('$profile.use_accounts','') != ''
    <key name="use_accounts" value="false" />
#end if
#if $getVar('$profile.hidden','') != ''
    <key name="hidden" value="true" />
#end if

<!--
The following settings are for the protocol. But these can also be set
in $(profile.classname).xml file
-->
    <profile name="$agentname" type="client" >
        #for $key, $value in $agentprops.items()
        <key name="$key" value="$value" />
        #end for
    </profile>

<!-- The following are the storage plugins that this plugin supports.
If you do not use a storage plug-in, then you do not need to have the
following definitions.
These are just samples and you can have your own storage plugins
-->
    #for $storagename, $props in $storages.items()
    <profile name="$storagename" type="storage" >
        #for $key, $value in $props.items()
        <key name="$key" value="$value" />
        #end for
    </profile>
    #end for
    
<!-- Add any extra key/value pairs that your plugin might need. These
properties are not used by the framework and only your plugin can make
use of them. These key/values should not conflict with the ones that 
the framework uses -->

    #for $key, $value in $extprops.items()
    <key name="$key" value="$value" />
    #end for

</profile>
